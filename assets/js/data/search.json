[ { "title": "Golang how to unmarshal a subset of nested JSON data", "url": "/posts/golang-how-to-unmarshal-a-subset-of-nested-json-data/", "categories": "", "tags": "golang, json, parser, unmarshaler", "date": "2020-06-30 00:00:00 +0000", "snippet": "Have you ever face a case when you need to get nested data from a JSON object?I think we face this scenario all the time when we deal with third-party APIsregularly we use JSON unmarshaling to a struct that contains another struct was the only obvious way,But today I’m happy to introduce a new option with NJSON package, an option that gives us the ability and flexibility to unmarshal any nested JSON without creating nested objects, just by it’s JSON pathFor examplewe are trying to unmarshal this JSON string{ &quot;coord&quot;: { &quot;lon&quot;: -0.13, &quot;lat&quot;: 51.51 }, &quot;weather&quot;: [ { &quot;id&quot;: 300, &quot;main&quot;: &quot;Drizzle&quot;, &quot;description&quot;: &quot;light intensity drizzle&quot;, &quot;icon&quot;: &quot;09d&quot; } ], &quot;base&quot;: &quot;stations&quot;, &quot;main&quot;: { &quot;temp&quot;: 280.32, &quot;pressure&quot;: 1012, &quot;humidity&quot;: 81, &quot;temp_min&quot;: 279.15, &quot;temp_max&quot;: 281.15 }, &quot;visibility&quot;: 10000, &quot;wind&quot;: { &quot;speed&quot;: 4.1, &quot;deg&quot;: 80 }, &quot;clouds&quot;: { &quot;all&quot;: 90 }, &quot;dt&quot;: 1485789600, &quot;sys&quot;: { &quot;type&quot;: 1, &quot;id&quot;: 5091, &quot;message&quot;: 0.0103, &quot;country&quot;: &quot;GB&quot;, &quot;sunrise&quot;: 1485762037, &quot;sunset&quot;: 1485794875 }, &quot;id&quot;: 2643743, &quot;name&quot;: &quot;London&quot;, &quot;cod&quot;: 200}(JSON from openweathermap)To weather overview struct like thistype Weather struct { Location string Weather string Description string Temperature float32 MinTemperature float32 MaxTemperature float32 }Using the standard JSON package we are going to unmarshal it then restructure it like this type Weather struct { Location string Weather string Description string Temperature float32 MinTemperature float32 MaxTemperature float32 } type TmpWeather struct { Location string `json:&quot;name&quot;` Weather []struct { Weather string `json:&quot;main&quot;` Description string `json:&quot;description&quot;` } `json:&quot;weather&quot;` Temperature struct { Temperature float32 `json:&quot;temp&quot;` MinTemperature float32 `json:&quot;temp_min&quot;` MaxTemperature float32 `json:&quot;temp_max&quot;` } `json:&quot;main&quot;` } var tmpW TmpWeather err := json.Unmarshal([]byte(jsonString), &amp;amp;tmpW) if err != nil { panic(err) } fmt.Printf(&quot;%+v\\n&quot;, tmpW) // {Location:London Weather:[{Weather:Drizzle Description:light intensity drizzle}] Temperature:{Temperature:280.32 MinTemperature:279.15 MaxTemperature:281.15}} weather := Weather{ Location: tmpW.Location, Weather: tmpW.Weather[0].Weather, Description: tmpW.Weather[0].Description, Temperature: tmpW.Temperature.Temperature, MinTemperature: tmpW.Temperature.MinTemperature, MaxTemperature: tmpW.Temperature.MaxTemperature, } fmt.Printf(&quot;%+v\\n&quot;, weather) // {Location:London Weather:Drizzle Description:light intensity drizzle Temperature:280.32 MinTemperature:279.15 MaxTemperature:281.15}With NJSON all we need to do is just add njson tag to structthen unmarshal it using NJSON like this type Weather struct { Location string `njson:&quot;name&quot;` Weather string `njson:&quot;weather.0.main&quot;` Description string `njson:&quot;weather.0.description&quot;` Temperature float32 `njson:&quot;main.temp&quot;` MinTemperature float32 `njson:&quot;main.temp_min&quot;` MaxTemperature float32 `njson:&quot;main.temp_max&quot;` } var weather Weather err := njson.Unmarshal([]byte(jsonString), &amp;amp;weather) if err != nil { panic(err) } fmt.Printf(&quot;%+v\\n&quot;, weather) // {Location:London Weather:Drizzle Description:light intensity drizzle Temperature:280.32 MinTemperature:279.15 MaxTemperature:281.15}Wrapping upI hope you like NJSON, for more details you can visit NJSON GitHub repo, you can find the complete example Here and for any feedback don’t hesitate to contact me on twitter @m7shapan" } ]
